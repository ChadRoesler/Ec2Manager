@page
@model Ec2Manager.Pages.IndexModel

@{
    ViewData["Title"] = "Instances";
}

<h2>AwsInstances</h2>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>

            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort">
                   @*asp-route-currentFilter="@Model.CurrentFilter">*@
                    @Html.DisplayNameFor(model => model.Instances[0].Name)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Instances[0].AccountName)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.StatusSort">
                   @*asp-route-currentFilter="@Model.CurrentFilter">*@
                    @Html.DisplayNameFor(model => model.Instances[0].Status)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Instances[0].IpAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Instances[0].Id)
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Instances)
        {
            <tr>
                <td>
                    <img src="@Url.Content(item.StatusImage)" alt="statusimage" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IpAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @{ if (item.Status.Equals("Stopped", StringComparison.InvariantCultureIgnoreCase))
                        {
                            <a asp-page="./Enable" asp-route-id="@item.AccountName+@item.Id" class="btn btn-primary btn-default">Enable</a>
                        } }
                </td>
            </tr>
        }

    </tbody>
</table>
@*
@{
    var prevDisabled = !Model.Instances.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Instances.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Instances.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Instances.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @nextDisabled">
    Next
</a>
*@