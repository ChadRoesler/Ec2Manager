@using Microsoft.Extensions.Configuration
@using PagedList.Core
@using PagedList.Core.Mvc
@using Ec2Manager.Models.DataManagement
@inject IConfiguration Configuration
@model Ec2Manager.Models.DataManagement.SearchResult
@{
    ViewData["Title"] = "Base";
}
@{
    var hasResult = Model.SearchHits != null && Model.SearchHits.TotalItemCount > 0;
}
@if (hasResult)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                </th>
                <th>
                    @if (Model.SortOrder == "name")
                    {
                        <a asp-action="Index" asp-controller="Home" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-sortorder="name_desc">
                            @Html.DisplayNameFor(Model => Model.SearchHits.FirstOrDefault().Name)
                        </a>
                    }
                    else
                    {
                        <a asp-action="Index" asp-controller="Home" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-sortorder="name">
                            @Html.DisplayNameFor(Model => Model.SearchHits.FirstOrDefault().Name)
                        </a>
                    }
                </th>
                <th>
                    @if (Model.SortOrder == "account")
                    {
                        <a asp-action="Index" asp-controller="Home" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-sortorder="account_desc">
                            @Html.DisplayNameFor(Model => Model.SearchHits.FirstOrDefault().Account)
                        </a>
                    }
                    else
                    {
                        <a asp-action="Index" asp-controller="Home" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-sortorder="account">
                            @Html.DisplayNameFor(Model => Model.SearchHits.FirstOrDefault().Account)
                        </a>
                    }
                </th>
                <th>
                    @if (Model.SortOrder == "status")
                    {
                        <a asp-action="Index" asp-controller="Home" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-sortorder="status_desc">
                            @Html.DisplayNameFor(Model => Model.SearchHits.FirstOrDefault().Status)
                        </a>
                    }
                    else
                    {
                        <a asp-action="Index" asp-controller="Home" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-sortorder="status">
                            @Html.DisplayNameFor(Model => Model.SearchHits.FirstOrDefault().Status)
                        </a>
                    }

                </th>
                <th>
                    @if (Model.SortOrder == "ipaddress")
                    {
                        <a asp-action="Index" asp-controller="Home" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-sortorder="ipaddress_desc">
                            @Html.DisplayNameFor(Model => Model.SearchHits.FirstOrDefault().IpAddress)
                        </a>
                    }
                    else
                    {
                        <a asp-action="Index" asp-controller="Home" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-sortorder="ipaddress">
                            @Html.DisplayNameFor(Model => Model.SearchHits.FirstOrDefault().IpAddress)
                        </a>
                    }
                </th>
                <th>
                    @if (Model.SortOrder == "id")
                    {
                        <a asp-action="Index" asp-controller="Home" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-sortorder="id_desc">
                            @Html.DisplayNameFor(Model => Model.SearchHits.FirstOrDefault().Id)
                        </a>
                    }
                    else
                    {
                        <a asp-action="Index" asp-controller="Home" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-sortorder="id">
                            @Html.DisplayNameFor(Model => Model.SearchHits.FirstOrDefault().Id)
                        </a>
                    }

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.SearchHits)
            {
                <tr>
                    <td>
                        <img src="@Url.Content(item.StatusImage)" alt="statusimage" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Account)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IpAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @if (@item.Status.Equals("stopped"))
                        {
                            <a asp-action="Enable" asp-route-id="@item.Id" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-page="@Model.Page" asp-route-sortorder="@Model.SortOrder" class="btn btn-primary btn-default">Enable</a>
                        }
                        @if (@Configuration.GetValue<bool>("Ec2Manager:EnableRebootFunction") && @item.Status.Equals("running"))
                        {
                            <a asp-action="Reboot" asp-route-id="@item.Id" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-page="@Model.Page" asp-route-sortorder="@Model.SortOrder" class="btn btn-primary btn-default">Reboot</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />

    <p><pager class="pager-container" list="@Model.SearchHits" options="@PagedListRenderOptions.Bootstrap4Minimal" asp-action="Index" asp-controller="Home" asp-route-searchtype="@Model.SearchType" asp-route-query="@Model.SearchQuery" asp-route-sortorder="@Model.SortOrder" /></p>

}